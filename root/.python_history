exit()
import pandas
dir(pandas)
clear
import tkinter
dir(tkinter)
import matplotlib
dir(matplotlib)
import scikit
import scikitlearn
impoty Beautifulsoaps
impoty Beautifulsoap
import Beautifulsoap
import Beautifulsoaps
cls
import Django
import django
dir(djando)
dir(django)
django init
exit()
import jupyter
dir(jupyter)
jupyter
import sklearn
dir(sklearn)
exit
import scipy
dir(scipy)
scipy.version
scipy.version.full_version
exit()
import string
string.punctuation
exit()
 2 + 2 == 4
2+2==4
2+2==3
2+2==4 AND not 2 + 2==5 and 2*2==2+2
2+2==4 and not 2 + 2==5 and 2*2==2+2
2+2==4 and not 2 + 2==5 and 2*2==2+1
2+2==4 and  2 + 2==5 and 2*2==2+2
2+2==4 or not 2 + 2==5 and 2*2==2+1
exit()
import zipfile
dir(zipfile)
import zipfile
import os
x = zipfile.ZipFile(x-special/nautilus-clipboard
copy
file:///media/root/steven/steveee/4_5963066103377691707.zip
import zipfile
import os
x= zipfile.ZipFile('4_5963066103377691707.zip')
x.namelist()
x.getinfo('TkinterGUIApplicationDevelopmentCookbook_Code/SoftwareHardwareList.pdf')
x.extractall()
x.close()
exit()
import request
import time
for t in dir(time)
ticks in dir(time)
'ticks' in dir(time)
'tick' in dir(time)
import datetime
'tick' in dir(datetime)
'time' in dir(time)
import pyautogui
grade= []
grade .append((23,45))
grade .append((223,445))
grade
[x for x in grade]
[x for x in grade for i in x]
[x , y for a , b in grade]
[x  y for a , b in grade]
[f"{} : {}" for a , b in grade,x,y]
[f"{} : {}" for a , b in grade]
exit()
me = [(x,y) for x in range (100) for y in range(100)]
me
me = [for (abcdefgh) for a in range(0,9)for b in range(0,9)for c in range(0,9)for d in range(0,9)for a in range(0,9)for a in range(0,9)for a in range(0,9)for a in range(0,9)]
me = [for (abcdefgh) for a in range(0,9)for b in range(0,9)for c in range(0,9)for d in range(0,9)for e in range(0,9)for f in range(0,9)for g in range(0,9)for h in range(0,9)]
me = [for (a,b,c,d,e,f,g,h) for a in range(0,9)for b in range(0,9)for c in range(0,9)for d in range(0,9)for e in range(0,9)for f in range(0,9)for g in range(0,9)for h in range(0,9)]
`exit()
exit()
1 + '1'
'1' + 1
import django
dir(django)
exit()
django.version
django.VERSION
import django
django.VERSION
exit()
django-admin startproject steven
import django
django-admin startproject steven
exit
exit()
import django
django.get_version()
exit()
import pyqt5
import pyqt
import pyqt4
exit()
20200101-19990101
20200120-19990101
exit()
exit
exit()
import djangio
import django
exit()
import django
exit()
import django
pip install django
exit()
exit
exit()
import django
import Django
exit()
django
exit
exit()
import django
exit()
import django
import pandas
exit()
import pandas
exit)()
exit()
import pandas
exit
exit()
import django
exit()
exit
exit()
import django
print(34)
exit()
import django
exit()
import pandas
exit()
import flask
exit()
import django
import pandas
import numpy
import matplotlip
import matplotlib
exit()
square??
exit()
import pandas as pd
import numpy as np
area = pd.Series({'California': 423967, 'Texas': 695662,
 'New York': 141297, 'Florida': 170312,
 'Illinois': 149995})
 pop = pd.Series({'California': 38332521, 'Texas': 26448193,
 'New York': 19651127, 'Florida': 19552860,
 'Illinois': 12882135})
 data = pd.DataFrame({'area':area, 'pop':pop})
area = pd.Series({'California': 423967, 'Texas': 695662,
 'Illinois': 12882135})
 pop = pd.Series({'California': 38332521, 'Texas': 26448193,
pop = pd.Series({'California': 38332521, 'Texas': 26448193,
 'New York': 19651127, 'Florida': 19552860,
 'Illinois': 12882135})
area = pd.Series({'California': 423967, 'Texas': 695662,
 'New York': 141297, 'Florida': 170312,
 'Illinois': 149995})
 data = pd.DataFrame({'area':area, 'pop':pop})
data = pd.DataFrame({'area':area, 'pop':pop})
data
data["mass"] = data[pop] / data[area]
data["mass"] = data['pop'] / data['area']
data
data.T
data
import seaborn as sns
import matplotlib.pyplot as plt
dir(plt)
title in dir(plt)
'title' in dir(plt)
'gca' in dir(plt)
import mysql.connector
pip
exit()
import pandas as pd
import numpy as np
monte = pd.Series(['Graham Chapman', 'John Cleese', 'Terry Gilliam',
 'Eric Idle', 'Terry Jones', 'Michael Palin'])
monte.startwith('john')
monte.str.startwith('john')
monte.str.startswith('john')
monte.str.startswith('John')
monte.str.startswith(r'\dddd')
monte.str.startswith(r'\s')
monte.str.extract(r'\s')
monte.str.split()
monte.str.split()[0]
monte.str.split()[:,0:]
monte.str.split()[:,0]
monte.str.split()
pd.DataFrame(monte.str.split())
monte.str.extract('(A-z)+')
monte.str.extract('(A-Z)+')
monte.str.extract('(A-Za-z)+')
monte.str.extract('([A-Z])+')
monte.str.extract('([A-z])+')
monte.str.extract('([A-Za-z])+')
monte.str.extract('([A-z]+)')
from dateutil import parser
date = parder.parse("1st jan 2020")
date = parser.parse("1st jan 2020")
date
date = parser.parse("13 january 2020 1845")
date
date.strftime('%A")
date.strftime('%A')
exit()
import opencv
exit()
import numpy as np
np.linspace(-1 , 11)
x np.linspace(-1 , 11)
x = np.linspace(-1 , 11)
x[: ,np.newaxis]
rng = np.random.RandomState(42)
rng
x = 10 * rng.rand(50)
x
y = 2 * x - 1 + rng.randn(50)
y
x[:, np.newaxis]
x[:, np.newaxis].shape
exit()
x = [1,3,5,6,8,5]
y = ["steve","kamai","jonk","Ngosh","maish","joan"]
a = {b : c for b in x for c in y}
a
for k,v in a.values:
    print(k + str(":") + str(v))
for k,v in a:
    print(k + str(":") + str(v))
p
    print(k + str(":") + str(v))
a = {b => c for b in x for c in y}
a = {b "=>" c for b in x for c in y}
a = {b  c for b in x for c in y}
a = {(b : c) for b in x for c in y}
a = {b : c for b in x for c in y}
a
a =[b : c for b in x for c in y]
a =[b , c for b in x for c in y]
a =[(b , c) for b in x for c in y]
a
exit(0
)
import seaborn as sns
sns.load_dataset('iris')
sns.load_dataset("iris")
from sklearn.datasets import load_digits
pip install sklearn
pip install python
x
rng = np.random.RandomState(42)
import numpy as np
rng = np.random.RandomState(42)
x = 10 * rng.rand(50)
y = 2 * x - 1 + rng.randn(50)
x.data
x
y.target
[a for a in range(1000)
}
[a for a in range(1000)]
x
num =[a for a in range(1000)]
[a for a in num if num % 2 ==0 and num % 5 == 0 and num % 100 ==0]
[a for a in num if num % 2 ==0  num % 5 == 0  num % 100 ==0]
[a for a in num if a % 2 ==0 and a % 5 == 0 and a % 100 ==0]
[a for a in num if a % 2 !=0 and a % 5 != 0 and a % 100 !=0]
import matplotlib.pyplot as plt
plt.plot(num)
plt.show()
exit()
make_data(200)
exit()
import pyautogui
import pyautogui as p
p.location*(
p.location()
p.position()
while True:
	p.position()
exit
exit*9
exit()
import pyautogui as p
	p.position()
while True:
	p.position()
exit()
import pyautogui
import pyautogui as p
while True:
    p.position()
exit()
import pyautogui as p
while True:
	p.position()
exit()
import pyautogui as p
while True:
	p.position()
exit()
